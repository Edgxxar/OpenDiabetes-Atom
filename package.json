{
  "name": "open-diabetes-filter",
  "main": "./lib/index",
  "version": "1.0.0",
  "description": "Allows programming OpenDiabetesFilters using Google Blockly",
  "keywords": [],
  "deserializers": {
    "open-diabetes-filter/EditorView": "deserializeEditor",
    "open-diabetes-filter/PlotView": "deserializePlot"
  },
  "repository": "https://github.com/Edgxxar/OpenDiabetes-Atom",
  "license": "AGPL-3.0",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "dependencies": {
    "child_process": "^1.0.2",
    "dockerode": "^2.5.8",
    "etch": "^0.14.0",
    "fast-csv": "^3.4.0",
    "fs-extra": "^8.1.0",
    "gunzip-file": "^0.1.1",
    "md5-file": "^4.0.0",
    "pdfjs-dist": "^2.0.943",
    "slash": "^3.0.0",
    "uuid": "^3.3.2",
    "xml-js": "^1.6.11"
  },
  "configSchema": {
    "docker": {
      "title": "Docker",
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Use Docker",
          "description": "Use Docker for filter execution and plot generation. Docker images `plotteria` and `odv` need to be installed manually.",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "cleanup": {
          "title": "Remove Docker Containers After Exection",
          "description": "Remove Docker containers after they finished executing.",
          "type": "boolean",
          "default": true,
          "order": 2
        },
        "remote": {
          "title": "Use Remote Docker",
          "description": "Use a remote Docker instance. Specify host and port below.",
          "type": "boolean",
          "default": false,
          "order": 3
        },
        "protocol": {
          "title": "Remote Docker Protocl",
          "description": "Protocol of your docker daemon.",
          "type": "string",
          "default": "https",
          "order": 4
        },
        "host": {
          "title": "Remote Docker Host",
          "description": "Host of your docker daemon.",
          "type": "string",
          "default": "mydockerhost.tld",
          "order": 5
        },
        "port": {
          "title": "Remote Docker Port",
          "description": "Port of your docker daemon",
          "type": "integer",
          "default": 2376,
          "order": 6
        },
        "cert": {
          "title": "TLS Certificate",
          "description": "Path to your TLS certificate file",
          "type": "string",
          "default": "docker.pem",
          "order": 7
        },
        "key": {
          "title": "TLS Keyfile",
          "description": "Path to your TLS key file",
          "type": "string",
          "default": "dockerkey.pem",
          "order": 8
        },
        "cacert": {
          "title": "TLS CA Certificate",
          "description": "Path to your TLS CA certificate file",
          "type": "string",
          "default": "dockerca.pem",
          "order": 9
        },
        "noca": {
          "title": "Do not verify TLS certificate",
          "description": "**DANGER:** This sets the `NODE_TLS_REJECT_UNAUTHORIZED` environment variable to `0`!<br>Check this to use self-signed certificates.",
          "type": "boolean",
          "default": false,
          "order": 10
        }
      },
      "order": 1
    },
    "cli": {
      "title": "Open Diabetes Vault Command Line Interface",
      "type": "object",
      "properties": {
        "native": {
          "title": "Use built-in ODV CLI",
          "description": "Not used if you are using Docker. Use the built-in OpenDiabetesVault command line interface.",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "custom": {
          "title": "Custom ODV CLI",
          "description": "Not used if you are using Docker. Path to your OpenDiabetesVault command line interface executable.",
          "type": "string",
          "default": "OpenDiabetesVault.jar",
          "order": 2
        },
        "precompile": {
          "title": "Filter Compilation",
          "description": "If enabled filter processes will be compiled, using the compile command below, before being passed to the CLI.",
          "type": "boolean",
          "default": true,
          "order": 3
        }
      },
      "order": 2
    },
    "plot": {
      "title": "Plotteria",
      "type": "object",
      "properties": {
        "native": {
          "title": "Use built-in plot generator",
          "description": "Not used if you are using Docker. Use the built-in plot generator.",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "custom": {
          "title": "Custom Plot Generator",
          "description": "Not used if you are using Docker. Path to your plot executable.",
          "type": "string",
          "default": "plot.py",
          "order": 2
        },
        "config-native": {
          "title": "Use built-in plot config",
          "description": "Use the built-in plot config.",
          "type": "boolean",
          "default": true,
          "order": 3
        },
        "config-custom": {
          "title": "Custom Plot Config",
          "description": "Path to your plot config.",
          "type": "string",
          "default": "config.ini",
          "order": 4
        }
      },
      "order": 3
    },
    "paths": {
      "title": "System Paths",
      "description": "Paths to your Java and Python binaries",
      "type": "object",
      "properties": {
        "java": {
          "title": "Java",
          "description": "If java is in your path, you can leave this at default",
          "type": "string",
          "default": "java",
          "order": 1
        },
        "javac": {
          "title": "Java Compiler",
          "description": "If javac is in your path, you can leave this at default",
          "type": "string",
          "default": "javac",
          "order": 2
        },
        "python": {
          "title": "Python 3",
          "description": "If python is in your path, you can leave this at default",
          "type": "string",
          "default": "python",
          "order": 3
        }
      },
      "order": 4
    },
    "commands": {
      "title": "Commands",
      "description": "Commands are executed in Docker if enabled, or on your system.<br>The variables `java`, `javac` and `python` will be substituted with the corresponding paths defined above.<br>The variable `cli` will be substituted with the corresponding path to the ODV CLI executable.<br>The variables `plot` and `config` will be substituted with the corresponding paths to the plot generator and plot config.",
      "type": "object",
      "properties": {
        "version": {
          "title": "CLI version",
          "description": "Used to check the version of your command line interface.",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" --version",
          "order": 1
        },
        "init": {
          "title": "ODV repository init",
          "description": "Used to initialize an ODV repository.",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" init .",
          "order": 2
        },
        "listtags": {
          "title": "ODV tag list",
          "description": "Used to get all tags of the current ODV repository.",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" tag -l",
          "order": 3
        },
        "import": {
          "title": "ODV data import",
          "description": "Used to import data into your ODV repository.<br>**Arguments:**<br>`type`: import type<br>`files`: files to import",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" import -t %type% %files%",
          "order": 4
        },
        "importslice": {
          "title": "ODV slice import",
          "description": "Used to create a tag from slice file.<br>**Arguments:**<br>`file`: slice file to import<br>`tag`: tag to use",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" tag -s \"%file%\" %tag%",
          "order": 5
        },
        "export": {
          "title": "ODV data export",
          "description": "Used to export all data from your ODV repository.<br>**Arguments:**<br>`type`: import type",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" export -t %type%",
          "order": 6
        },
        "exporttagged": {
          "title": "ODV data export (tagged)",
          "description": "Used to export data with the given tag from your ODV repository.<br>**Arguments:**<br>`type`: import type<br>`tag`: input tag",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" export -t %type% -i %tag%",
          "order": 7
        },
        "compile": {
          "title": "ODV filter compilation",
          "description": "Used to compile ODV filter classes before execution<br>**Arguments:**<br>`file`: relative path to process container",
          "type": "string",
          "default": "\"%javac%\" -cp \"%cli%\" \"%file%\"",
          "order": 8
        },
        "process": {
          "title": "ODV filter process",
          "description": "Used to execute filters.<br>**Arguments:**<br>`file`: relative path to process container<br>`out`: tag used for results",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" process -f \"%file%\" -o %out%",
          "order": 9
        },
        "processtagged": {
          "title": "ODV filter process",
          "description": "Used to execute filters.<br>**Arguments:**<br>`file`: relative path to process container<br>`in`: tag used for input<br>`out`: tag used for results",
          "type": "string",
          "default": "\"%java%\" -jar \"%cli%\" process -f \"%file%\" -i %in% -o %out%",
          "order": 10
        },
        "plotversion": {
          "title": "Plot version",
          "description": "Used to check the version of the plot executable.<br>**Arguments:**<br>`plot`: path to your plot executable",
          "type": "string",
          "default": "\"%python%\" \"%plot%\" --version",
          "order": 11
        },
        "plot-daily": {
          "title": "Plot generation (Daily Plots)",
          "description": "Used to generate plots from data.<br>**Arguments:**<br>`file`: path to the data file<br>`out`: path to output directory",
          "type": "string",
          "default": "\"%python%\" \"%plot%\" -c \"%config%\" -f \"%file%\" -d -L -o \"%out%\"",
          "order": 12
        },
        "plot-tiny": {
          "title": "Plot generation (Tiny Slices)",
          "description": "Used to generate plots from data.<br>**Arguments:**<br>`file`: path to the data file<br>`slice`: path to the slice file<br>`out`: path to output directory",
          "type": "string",
          "default": "\"%python%\" \"%plot%\" -c \"%config%\" -f \"%file%\" -t \"%slice%\" -L -o \"%out%\"",
          "order": 13
        },
        "plot-normal": {
          "title": "Plot generation (Normal Slices)",
          "description": "Used to generate plots from data.<br>**Arguments:**<br>`file`: path to the data file<br>`slice`: path to the slice file<br>`out`: path to output directory",
          "type": "string",
          "default": "\"%python%\" \"%plot%\" -c \"%config%\" -f \"%file%\" -n \"%slice%\" -L -o \"%out%\"",
          "order": 14
        },
        "plot-big": {
          "title": "Plot generation (Big Slices)",
          "description": "Used to generate plots from data.<br>**Arguments:**<br>`file`: path to the data file<br>`slice`: path to the slice file<br>`out`: path to output directory",
          "type": "string",
          "default": "\"%python%\" \"%plot%\" -c \"%config%\" -f \"%file%\" -b \"%slice%\" -L -o \"%out%\"",
          "order": 15
        }
      },
      "order": 5
    }
  }
}
